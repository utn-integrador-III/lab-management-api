#This is the header of the file, whose main goal is to display important information
#about the .yml file.
swagger: "2.0"
info:
  description: "Student Service API's Documentation"
  version: "1.0.0"
  title: "Swagger Student Service API"
  termsOfService: "Terms"
  contact:
    email: "ebarahona@utn.ac.cr"
host: "localhost:5001"
basePath: "/booking_api"
tags:
  - name: "Labs"
    description: "All Lab's Endpoints"
schemes:
  - "https"
  - "http"
definitions:
  Response:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/LabGet"
      message:
        type: string
        example: "Successfully requested"
      message_code:
        type: string
        example: "OK_MSG"
  ErrorResponse:
    type: object
    properties:
      data:
        type: string
        example: null
      message:
        type: string
      message_code:
        type: string
  InvalidIdErrorResponse:
    type: object
    properties:
      data:
        type: string
        example: null
      message:
        type: string
        example: "Invalid Id"
      message_code:
        type: string
        example: "INVALID_ID"
  InternalErrorResponse:
    type: object
    properties:
      data:
        type: string
        example: null
      message:
        type: string
        example: "Internal server error"
      message_code:
        type: string
        example: "INTERNAL_SERVER_ERROR_MSG"
  LabGet:
    type: object
    properties:
      _id:
        type: string
        example: "0183IEHU#&#J"
      LabID:
        type: integer
        example: 34
      name:
        type: string
        example: "Laboratories"
      description:
        type: string
        example: Laboratories Lab
  LabGetById:
    type: object
    properties:
      _id:
        type: integer
        example: 34
      name:
        type: string
        example: "Laboratories"
  LabPost:
    type: object
    required:
      - "name"
    properties:
      name:
        type: string
        example: "Laboratories"
      description:
        type: string
        example: "Laboratories Lab"
  UpdateBooking:
    type: object
    required:
      - "lab_book_id"
      - "student_email"
      - "student_name"
      - "computer"
      - "usage_time"
    properties:
      lab_book_id:
        type: string
        example: "66882fc47495a27748ac7bb8"
      student_email:
        type: string
        example: "alejandro@est.utn.ac.cr"
      student_name:
        type: string
        example: "Alejandro Jose Rodr√≠guez Jaen"
      computer:
        type: string
        example: "pc-11"
      usage_time:
        type: string
        example: "7185578000001"
paths:
  /Lab:
    get:
      tags:
        - "Labs"
      summary: "Get list of all Labs"
      description: "Get list of all Labs"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "A list of countries"
          schema:
            $ref: "#/definitions/LabGet"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalErrorResponse"
    post:
      tags:
        - "Labs"
      parameters:
        - in: "body"
          name: "body"
          description: "Lab object that needs to be added"
          required: true
          schema:
            $ref: "#/definitions/LabPost"
      summary: "Create a Lab"
      description: "Create a Lab"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "201":
          description: "Lab successfully created"
          schema:
            allOf:
              - $ref: "#/definitions/Response"
              - properties:
                  data:
                    $ref: "#/definitions/LabGet"
                  message:
                    example: "Lab successfully created"
                  message_code:
                    example: "LAB_SUCCESSFULLY_CREATED"
        "409":
          description: "Lab already exists"
          schema:
            allOf:
              - $ref: "#/definitions/ErrorResponse"
              - properties:
                  message:
                    example: "Lab already exists"
                  message_code:
                    example: "LAB_ALREADY_EXIST"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalErrorResponse"
    put:
      tags:
        - "Labs"
      summary: "Update a lab booking with new student information"
      description: "This endpoint updates a lab booking by adding a new student with the provided information."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Lab booking update data"
          required: true
          schema:
            $ref: "#/definitions/UpdateBooking"
      responses:
        "200":
          description: "Computer booked successfully"
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/UpdateBooking"
              message:
                type: string
                example: "Computer booked successfully"
              message_code:
                type: string
                example: "LAB_SUCCESSFULLY_UPDATED"
        "400":
          description: "Validation Error"
          schema:
            type: object
            properties:
              data:
                type: string
                example: null
              message:
                type: string
                example: "Invalid update data: missing key 'computer'"
              message_code:
                type: string
                example: "INCORRECT_REQUEST_PARAM"
        "404":
          description: "Lab book not found"
          schema:
            type: object
            properties:
              data:
                type: string
                example: null
              message:
                type: string
                example: "Lab book not found"
              message_code:
                type: string
                example: "LAB_NOT_FOUND"
        "409":
          description: "Computer already booked"
          schema:
            type: object
            properties:
              data:
                type: string
                example: null
              message:
                type: string
                example: "Computer already booked"
              message_code:
                type: string
                example: "CONFLICT_MSG"
        "500":
          description: "Internal Server Error"
          schema:
            type: object
            properties:
              data:
                type: string
                example: null
              message:
                type: string
                example: "Error retrieving lab book: Invalid ObjectId: 66882fc47495a27748ac7b"
              message_code:
                type: string
                example: "INTERNAL_SERVER_ERROR_MSG"
    get:
      tags:
        - "Labs"
      summary: "Find Lab by ID"
      description: "Returns a single Lab"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "LabId"
          in: "path"
          description: "ID of Lab to return"
          required: true
          type: "integer"
          format: "integer"
      responses:
        "200":
          description: "Get single Lab successfully"
          schema:
            allOf:
              - $ref: "#/definitions/Response"
              - properties:
                  data:
                    $ref: "#/definitions/LabGet"
        "404":
          description: "Lab not found"
          schema:
            allOf:
              - $ref: "#/definitions/ErrorResponse"
              - properties:
                  message:
                    example: "Lab not found"
                  message_code:
                    example: "LAB_ITEM_NOT_FOUND"
        "422":
          description: "Invalid Object Id"
          schema:
            $ref: "#/definitions/InvalidIdErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalErrorResponse"
    delete:
      tags:
        - "Labs"
      summary: "Delete Lab by ID"
      description: "Returns a deleted Lab"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "LabId"
          in: "path"
          description: "ID of Lab to delete"
          required: true
          type: "integer"
          format: "integer"
      responses:
        "200":
          description: "Lab successfully deleted"
          schema:
            allOf:
              - $ref: "#/definitions/Response"
              - properties:
                  data:
                    $ref: "#/definitions/LabGet"
                  message:
                    example: "Lab successfully deleted"
                  message_code:
                    example: "LAB_SUCCESSFULLY_DELETED"
        "404":
          description: "Lab not found"
          schema:
            allOf:
              - $ref: "#/definitions/ErrorResponse"
              - properties:
                  message:
                    example: "Lab not found"
                  message_code:
                    example: "LAB_ITEM_NOT_FOUND"
        "422":
          description: "Invalid Object Id"
          schema:
            $ref: "#/definitions/InvalidIdErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalErrorResponse"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
